name: CI

on:
  push:
    branches: [ "main" ]
    paths:
      - "server/**"
      - "web/**"
      - ".github/workflows/**"
      - "pom.xml"
  pull_request:
    branches: [ "main" ]
    paths:
      - "server/**"
      - "web/**"
      - ".github/workflows/**"
      - "pom.xml"

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  server:
    name: Server (Java 21 + Maven + Postgres)
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: fto_ci
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Temurin JDK 21 (with Maven cache)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"
          cache: maven
      # setup-java caching: resmi action bu özelliği yerleşik sağlar
      # (bkz. setup-java repo + GitHub docs) 
      # https://github.com/actions/setup-java , https://docs.github.com/.../building-and-testing-java-with-maven

      - name: Wait for Postgres
        run: |
          for i in {1..20}; do
            pg_isready -h localhost -p 5432 -U postgres && break
            sleep 3
          done

      - name: Build & test (Maven)
        working-directory: server
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/fto_ci
          SPRING_DATASOURCE_USERNAME: postgres
          SPRING_DATASOURCE_PASSWORD: postgres
        run: mvn -B -ntp clean verify

  web:
    name: Web (Node 20 + Next.js build & lint)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js 20 (with npm cache)
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: web/package-lock.json
      # setup-node caching: resmi action destekler

      - name: Install
        working-directory: web
        run: npm ci

      - name: Lint
        working-directory: web
        run: npm run lint --if-present

      - name: Build
        working-directory: web
        env:
          NEXT_TELEMETRY_DISABLED: "1"
        run: npm run build

      - name: Test
        working-directory: web
        run: npm test --if-present
